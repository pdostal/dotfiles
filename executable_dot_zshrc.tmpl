# vim: ft=zsh

{{- include "private_dot_secrets/zshrc" -}}

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=99999999
setopt beep extendedglob nomatch
unsetopt notify
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/pavel/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

unsetopt AUTO_REMOVE_SLASH

test -d "/opt/homebrew/opt/coreutils/libexec/gnubin/" && export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin/:$PATH"
test -d "/usr/local/bin" && export PATH="/usr/local/bin:$PATH"
test -d "$HOME/bin" && export PATH="$HOME/bin:$PATH"

test -f /opt/homebrew/bin/brew && eval $(/opt/homebrew/bin/brew shellenv)
test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh

# SSH agnet
function start_agent {
  echo '' > "$HOME/.ssh/environment"
  chmod 600 "$HOME/.ssh/environment"
  ssh-agent >> "$HOME/.ssh/environment"
  source "$HOME/.ssh/environment" > /dev/null
  echo "The SSH agent runs as ${SSH_AGENT_PID} ."
  ssh-add
}

# SSH Agent
if [ -f "$HOME/.ssh/environment" ]; then
  source "$HOME/.ssh/environment" > /dev/null
  if ! ps -p "$SSH_AGENT_PID" > /dev/null; then
    echo "Process ${SSH_AGENT_PID} is dead."
    start_agent
  else
    echo "The SSH agent runs as ${SSH_AGENT_PID} ."
  fi
else
  echo "File $HOME/.ssh/environment does not exist yet."
  start_agent
fi

# NeoVim
if command -v nvim &> /dev/null; then
  export EDITOR="nvim"
  alias vim='nvim'
elif command -v vim &> /dev/null; then
  export EDITOR="vim"
else
  echo "Install NeoVim or Vim\!"
fi

eval "$(sheldon source)"
eval "$(zoxide init zsh)"

export WORDCHARS=${WORDCHARS/\/}
source ~/.git-prompt.zsh

if command -v kubectl &> /dev/null; then
	source <(kubectl completion zsh)
	source <(kubectl completion zsh | sed 's/kubectl/k/g')
	alias k=kubectl
fi

if typeset -f kube_ps1 > /dev/null; then
  PROMPT='$(kube_ps1)'$PROMPT
  export KUBE_PS1_PREFIX=''
  export KUBE_PS1_SUFFIX=' '
  export KUBE_PS1_SYMBOL_ENABLE=false
fi

if command -v z &> /dev/null; then alias cd='z'; fi
if command -v git &> /dev/null; then alias g='git'; fi
if command -v bat &> /dev/null; then alias cat='bat -p'; fi

alias mosh='MOSH_TITLE_NOPREFIX=true mosh'
alias mtr='sudo mtr'

sshtmux() { ssh -t "$1" tmux attach -CC; }
sshauto() { autossh -t -M 0 "$1"; }
sshtmuxauto() { autossh -t -M 0 "$1" tmux attach -CC; }
moshtmux() { ssh "$1" 'kill `pidof mosh-server` >/dev/null 2>&1'; mosh "$1" tmux attach -CC; }

command -v motd &> /dev/null && motd

